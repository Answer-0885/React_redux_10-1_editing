{"version":3,"sources":["reducers/reducerForm.js","actions/actionTypes.js","reducers/reducerServiceList.js","store/configureStore.js","components/Atoms/Atoms.js","components/Form/Form.js","actions/actionCreators.js","utils/filtered.js","components/Sections/ListItem.js","components/Sections/List.js","components/Panel/Panel.js","App.js","index.js"],"names":["initialState","name","price","reducerForm","state","arguments","length","undefined","action","type","_action$payload","payload","value","_objectSpread","_defineProperty","id","nanoid","reducerServiceList","concat","_toConsumableArray","filter","item","idx","findIndex","copyState","ReactReduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION__","configureStore","legacy_createStore","combineReducers","serviceList","compose","ItemList","_ref","className","children","React","createElement","Fragment","key","Children","map","child","CardTitle","_ref2","title","Button","forwardRef","props","ref","onClick","clickHandler","style","btnStyle","text","Text","data","Form","onChange","label","tooltipeRef","useRef","dispatch","useDispatch","_useSelector","useSelector","handleInput","event","preventDefault","_event$target","target","changeFieldValue","onSubmit","current","addServiceList","filtered","arr","searchValue","elem","toLowerCase","includes","ListItem","element","onClickEdit","onClickRemove","List","list","find","completeFormsField","removeItemServiceList","o","Panel","App","ReactDOM","createRoot","document","getElementById","render","StrictMode","Provider","store"],"mappings":"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","file":"static/js/main.b5024f89.chunk.js","sourcesContent":["import {\r\n    CHANGE_FIELD_VALUE,\r\n    RESET_FORM,\r\n    COMPLETE_FORM,\r\n  } from \"../actions/actionTypes\";\r\n  \r\n  const initialState = {\r\n    name: \"\",\r\n    price: \"\",\r\n  };\r\n  \r\n  const reducerForm = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case CHANGE_FIELD_VALUE:\r\n        const { name, value } = action.payload;\r\n  \r\n        return { ...state, [name]: value };\r\n      case COMPLETE_FORM:\r\n        const copyState = action.payload;\r\n        return copyState;\r\n      case RESET_FORM:\r\n        return { name: \"\", price: \"\" };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default reducerForm;\r\n  ","export const CHANGE_FIELD_VALUE = \"CHANGE_FIELD_VALUE\";\r\nexport const RESET_FORM = \"RESET_FORM\";\r\nexport const COMPLETE_FORM = \"COMPLETE_FORM\";\r\nexport const NEW_ITEM_LIST = \"NEW_ITEM_LIST\";\r\nexport const REMOVE_ITEM_LIST = \"REMOVE_ITEM_LIST\";\r\nexport const EDIT_ITEM_LIST = \"EDIT_ITEM_LIST\";\r\n\r\n","import { nanoid } from \"nanoid\";\r\nimport {\r\n  NEW_ITEM_LIST,\r\n  REMOVE_ITEM_LIST,\r\n  EDIT_ITEM_LIST,\r\n  } from \"../actions/actionTypes\";\r\n\r\n\r\nconst initialState = [\r\n{ id: nanoid(), name: \"Замена стекла\", price: \"3000\" },\r\n{ id: nanoid(), name: \"Замена дисплея\", price: \"5000\" },\r\n{ id: nanoid(), name: \"Замена аккумулятора\", price: \"1500\"},\r\n{ id: nanoid(), name: \"Замена микрофона\", price: \"2500\" },\r\n];\r\n\r\nconst reducerServiceList = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case NEW_ITEM_LIST:\r\n      const { name, price } = action.payload;\r\n      return [...state, { id: nanoid(), name, price }];\r\n    case REMOVE_ITEM_LIST:\r\n      const id = action.payload;\r\n\r\n      return state.filter((item) => item.id !== id);\r\n    case EDIT_ITEM_LIST:\r\n      const idx = state.findIndex((item) => item.id === action.payload.id);\r\n      const copyState = state;\r\n      copyState[idx] = action.payload;\r\n\r\n      return [...copyState];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducerServiceList;\r\n","import { combineReducers, compose, legacy_createStore } from \"redux\";\r\nimport reducerForm from \"../reducers/reducerForm\";\r\nimport reducerServiceList from \"../reducers/reducerServiceList\";\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nconst configureStore = () => {\r\n  return legacy_createStore(\r\n    combineReducers({\r\n      item: reducerForm,\r\n      serviceList:reducerServiceList,\r\n    }),\r\n    undefined,\r\n    compose(ReactReduxDevTools)\r\n  );\r\n};\r\n\r\nexport default configureStore;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { nanoid } from 'nanoid'\r\n\r\n\r\nexport const ItemList = ({ id, className, children }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div id={id} className={className + \"-item item-list\"} key={nanoid()}>\r\n        <div className={className + \"-item-wrap\"} key={nanoid()}>\r\n          {React.Children.map(children, (child) => {\r\n            return child;\r\n          })}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport const CardTitle = ({ title }) => {\r\n  return (\r\n    <>\r\n      <h5 className=\"card-title\">{title}</h5>\r\n    </>\r\n  );\r\n};\r\nCardTitle.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport const Button = React.forwardRef((props, ref) => {\r\n  return (\r\n      <button\r\n        ref={ref}\r\n        id={props.id}\r\n        className={props.type}\r\n        onClick={\r\n          props.clickHandler\r\n            ? () => props.clickHandler(props.id)\r\n            : props.onClick\r\n        }\r\n        style={props.btnStyle}\r\n      >\r\n        {props.text}\r\n      </button>\r\n  );\r\n});\r\n\r\n/**Текст */\r\n\r\nexport const Text = React.forwardRef((data, ref) => {\r\n  if (!data) {\r\n    return null;\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <span ref={ref} className={data.className}>\r\n        {data.text}\r\n      </span>\r\n    </React.Fragment>\r\n  );\r\n});\r\n\r\n/**Поле ввода в форме поиска */\r\n\r\nexport const Input = React.forwardRef((data, ref) => {\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"input-wrapper\">\r\n        <input\r\n          ref={ref}\r\n          className={data.className + \"__input\"}\r\n          type={data.type}\r\n          name={data.name}\r\n          value={data.value}\r\n          onChange={data.onChange}\r\n        />\r\n        <label className=\"label\" name={data.label}>\r\n          {data.label}\r\n        </label>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n});\r\n","import React, { useRef } from \"react\";\r\nimport { nanoid } from 'nanoid'\r\nimport { Button, Text } from \"../Atoms/Atoms\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addServiceList, changeFieldValue, resetForm, editItemList } from \"../../actions/actionCreators\"\r\n\r\n\r\nconst Form = (data) => {\r\n  const tooltipeRef = useRef();\r\n  const dispatch = useDispatch();\r\n\r\n  const { id, name, price } = useSelector((state) => state.item);\r\n  const { type } = data;\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!name || !price) {\r\n      tooltipeRef.current.style[\"visibility\"] = \"visible\";\r\n      return null;\r\n    }\r\n    tooltipeRef.current.style[\"visibility\"] = \"hidden\";\r\n\r\n    id\r\n      ? dispatch(editItemList({ id, name, price }))\r\n      : dispatch(addServiceList(name, price));\r\n    dispatch(resetForm());\r\n  };\r\n\r\n  const handleInput = (event) => {\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    dispatch(changeFieldValue(name, value));\r\n  };\r\n\r\n  const onClickCancel = (event) => {\r\n    event.preventDefault();\r\n\r\n    dispatch(resetForm());\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"form-field-wrapper\">\r\n        <form onSubmit={handleSubmit} className={type + \"-forms\"}>\r\n          <input\r\n            value={name}\r\n            onChange={handleInput}\r\n            name=\"name\"\r\n            type=\"text\"\r\n            className=\"field-name__input\"\r\n          />\r\n          <input\r\n            value={price}\r\n            onChange={handleInput}\r\n            name=\"price\"\r\n            type=\"number\"\r\n            className=\"field-price__input\"\r\n          />\r\n          <div className={type + \"-form__btns-block\"}>\r\n            <Button\r\n              key={nanoid()}\r\n              id={nanoid()}\r\n              type={type + \"-form-add__btn\"}\r\n              text={\"Save\"}\r\n            />\r\n\r\n            {id && (\r\n              <Button\r\n                key={nanoid()}\r\n                type={\"button\"}\r\n                text={\"Cancel\"}\r\n                onClick={onClickCancel}\r\n              />\r\n            )}\r\n          </div>\r\n        </form>\r\n\r\n        <Text\r\n          ref={tooltipeRef}\r\n          key={nanoid()}\r\n          className={data.type + \"-form-tooltipe tooltipe\"}\r\n          text={\"*Заполните поле!\"}\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import { nanoid } from \"nanoid\";\r\nimport {\r\n  CHANGE_FIELD_VALUE,\r\n  RESET_FORM,\r\n  COMPLETE_FORM,\r\n  NEW_ITEM_LIST,\r\n  REMOVE_ITEM_LIST,\r\n  EDIT_ITEM_LIST,\r\n\r\n} from \"./actionTypes\";\r\n\r\nexport const changeFieldValue = (name, value) => {\r\n  return { type: CHANGE_FIELD_VALUE, payload: { name, value } };\r\n};\r\nexport const resetForm = () => {\r\n  return { type: RESET_FORM };\r\n};\r\n\r\nexport const addServiceList = (name, price) => {\r\n  return { type: NEW_ITEM_LIST, payload: { id: nanoid(), name, price } };\r\n};\r\n\r\nexport const removeItemServiceList = (id) => {\r\n  return { type: REMOVE_ITEM_LIST, payload: id };\r\n};\r\n\r\nexport const completeFormsField = (data) => {\r\n  return { type: COMPLETE_FORM, payload: data };\r\n};\r\n\r\nexport const editItemList = (data) => {\r\n  return { type: EDIT_ITEM_LIST, payload: data };\r\n};\r\n","const filtered = (arr, searchValue) => {\r\n    return arr.filter((elem) =>\r\n      elem.name.toLowerCase().includes(searchValue.toLowerCase())\r\n    );\r\n  };\r\n  export default filtered;","import React from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { ItemList, CardTitle, Button } from \"../Atoms/Atoms\";\r\n\r\nconst ListItem = ({ element, className, onClickEdit, onClickRemove }) => {\r\n  if (!element) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ItemList key={nanoid()} element={element} className={className}>\r\n        <CardTitle key={nanoid()} title={element.name}></CardTitle>\r\n        <CardTitle key={nanoid()} title={element.price}></CardTitle>\r\n        <div className=\"buttons__block\">\r\n          <Button\r\n            key={nanoid()}\r\n            id={element.id}\r\n            type={\"card-btn__edit\"}\r\n            clickHandler={onClickEdit}\r\n          ></Button>\r\n          <Button\r\n            key={nanoid()}\r\n            id={element.id}\r\n            type={\"card-btn__del\"}\r\n            clickHandler={onClickRemove}\r\n          ></Button>\r\n        </div>\r\n      </ItemList>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport React from \"react\";\r\nimport { removeItemServiceList, completeFormsField, resetForm } from \"../../actions/actionCreators\";\r\nimport filtered from \"../../utils/filtered\";\r\nimport ListItem from \"./ListItem\";\r\n\r\nconst List = ({ type }) => {\r\n  const { serviceList } = useSelector((state) => state);\r\n  const { item } = useSelector((state) => state);\r\n\r\n  const dispatch = useDispatch();\r\n  const list = filtered(serviceList, item.name);\r\n\r\n  const onClickEdit = (id) => {\r\n    const data = serviceList.find((item) => item.id === id);\r\n    dispatch(completeFormsField(data));\r\n  };\r\n  const onClickRemove = (id) => {\r\n    dispatch(removeItemServiceList(id));\r\n    dispatch(resetForm());\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <ul className={type + \"-list\"}>\r\n        {list.map((o) => (\r\n          <ListItem\r\n            key={o.id}\r\n            element={o}\r\n            className={type + \"-list\"}\r\n            onClickEdit={onClickEdit}\r\n            onClickRemove={onClickRemove}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport Form from \"../Form/Form\";\r\nimport List from \"../Sections/List\";\r\nimport { nanoid } from 'nanoid'\r\n\r\n\r\nconst Panel = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"panel-header\">\r\n        <Form type={\"repair\"} />\r\n      </div>\r\n      <List key={nanoid()} type={\"service\"}></List>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default Panel;\r\n","import React from \"react\";\r\nimport Panel from \"./components/Panel/Panel\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <Panel />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./store/configureStore\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <Provider store={configureStore()}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}